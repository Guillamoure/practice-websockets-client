{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jack\\\\Documents\\\\GitHub\\\\practice-websockets-client\\\\src\\\\index.js\";\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nconst localhost = 'localhost:1597';\nconst client = new W3CWebSocket(`ws://${localhost}`);\n\nconst App = () => {\n  const [username, setUsername] = React.useState('');\n  const [isLoggedIn, setLoggedIn] = React.useState(false);\n  const [messages, updateMessages] = React.useState([]);\n  React.useEffect(() => {\n    client.onopen = () => {\n      console.log(\"WebSocket Client Connected\");\n    };\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log('got reply', dataFromServer);\n\n      if (dataFromServer.type === \"message\") {\n        updateMessages([...messages, {\n          user: dataFromServer.user,\n          msg: dataFromServer.msg\n        }]);\n      }\n    };\n  }, []);\n\n  const onButtonClicked = () => {\n    const value = \"Yo!\";\n    client.send(JSON.stringify({\n      type: \"message\",\n      msg: value,\n      user: username\n    }));\n  };\n\n  const login = e => {\n    e.preventDefault();\n    setLoggedIn(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, isLoggedIn ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onButtonClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Send Message!\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, messages.map(msg => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 34\n    }\n  }, msg.msg, \" - \", msg.user)))) : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Enter name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"username\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Login\")));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/Jack/Documents/GitHub/practice-websockets-client/src/index.js"],"names":["ReactDOM","React","w3cwebsocket","W3CWebSocket","localhost","client","App","username","setUsername","useState","isLoggedIn","setLoggedIn","messages","updateMessages","useEffect","onopen","console","log","onmessage","message","dataFromServer","JSON","parse","data","type","user","msg","onButtonClicked","value","send","stringify","login","e","preventDefault","map","target","render","document","getElementById"],"mappings":"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","sourcesContent":["import ReactDOM from 'react-dom'\r\nimport React from 'react'\r\nimport { w3cwebsocket as W3CWebSocket } from 'websocket'\r\nconst localhost = 'localhost:1597'\r\n\r\nconst client = new W3CWebSocket(`ws://${localhost}`)\r\n\r\nconst App = () => {\r\n\r\n  const [username, setUsername] = React.useState('')\r\n  const [isLoggedIn, setLoggedIn] = React.useState(false)\r\n  const [messages, updateMessages] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    client.onopen = () => {\r\n      console.log(\"WebSocket Client Connected\")\r\n    }\r\n    client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data)\r\n      console.log('got reply', dataFromServer)\r\n      if(dataFromServer.type === \"message\"){\r\n        updateMessages([...messages, {\r\n          user: dataFromServer.user,\r\n          msg: dataFromServer.msg\r\n        }])\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const onButtonClicked = () => {\r\n    const value = \"Yo!\"\r\n    client.send(JSON.stringify({\r\n      type: \"message\",\r\n      msg: value,\r\n      user: username\r\n    }))\r\n  }\r\n\r\n  const login = (e) => {\r\n    e.preventDefault()\r\n    setLoggedIn(true)\r\n  }\r\n\r\n  return (\r\n    <div id=\"main\">\r\n      {isLoggedIn ?\r\n        <div>\r\n          <button onClick={onButtonClicked}>Send Message!</button>\r\n          <ul>\r\n            {messages.map(msg => <li>{msg.msg} - {msg.user}</li>)}\r\n          </ul>\r\n        </div>\r\n        :\r\n        <form onSubmit={login}>\r\n          <label>Enter name</label>\r\n          <input name=\"username\" value={username} onChange={(e) => setUsername(e.target.value)}/>\r\n          <button>Login</button>\r\n        </form>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"]},"metadata":{},"sourceType":"module"}